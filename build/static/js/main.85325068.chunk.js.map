{"version":3,"sources":["assets/sunflower_PNG13389.png","assets/harvest_bkg.jpg","assets/493312.jpg","assets/black-soil-2.png","actions.js","constants.js","utilities.js","components/homepage/Login.js","components/homepage/index.js","components/sign-up-page/index.js","components/nursery/Plant.js","components/modal/index.js","components/nursery/index.js","components/summary/index.js","components/header/MenuContent.js","components/UnstyledButton.js","components/header/LogOut.js","components/header/index.js","components/garden/GardenTile.js","components/garden/index.js","components/account/index.js","GlobalStyles.js","App.js","reducers/user-reducer.js","reducers/plants-reducer.js","reducers/garden-reducer.js","reducers/menu-reducer.js","reducers/modal-reducer.js","reducers/index.js","index.js","store.js"],"names":["module","exports","toggleModalShowing","content","contentType","type","targetGardenTiles","target","addExtraContent","contentDiv","COLORS","getSpacingTilesArray","string","plantCenterIndex","GARDEN_WIDTH","GARDEN_HEIGHT","spacing","array","spacingTiles","number","match","getNumberFromString","Math","round","index","i","j","push","getPlantObjById","id","find","plant","fetchGarden","email","a","fetch","res","json","account","console","log","Wrapper","styled","div","require","FormContainer","Login","dispatch","useDispatch","useState","username","setUsername","setEmail","password","setPassword","loggedIn","useSelector","state","userReducer","handleLogin","e","preventDefault","bod","reqObj","method","headers","body","JSON","stringify","status","gardenData","userData","data","garden","message","onSubmit","placeholder","onChange","value","to","Homepage","SignUpPage","width","setWidth","height","setHeight","newUserFlag","setNewUserFlag","handleSignUp","gardenArr","gardenArrLength","_id","planted","newUser","gardenWidth","gardenHeight","newGarden","send","props","src","StyledIcon","Icon","Plant","name","image_url","description","draggable","plantObj","img","onDragStart","dataTransfer","setData","setPlantOnDrag","onDragOver","stopPropagation","icon","infoOutline","color","size","onClick","LeftDiv","extraContent","ContentDiv","Modal","modalReducer","isShowing","deleteOutline","Nursery","plantsReducer","plants","useEffect","then","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","parse","map","key","SummaryDiv","Quantity","span","Summary","summary","gardenReducer","each","weatherSunny","optimal_sun","quantity","MenuContent","menuReducer","button","LogOut","handleLogOut","UnstyledButton","NavBar","Greeting","Header","StyledCol","image","ModalWrapper","BtnDiv","GardenTile","plantTarget","onDrop","getData","tilesArray","updateGardenTile","handleDrop","handleDragOver","includes","deleteGardenTiles","handleDeletePlant","squirrel","when_to_plant","u1F33E","harvesting","u1F34E","col","row","uniqueKey","StyledRow","GardenContainer","Garden","col_tiles","row_tiles","tileIndex","r","c","tileId","Account","GlobalStyles","createGlobalStyle","App","exact","path","initialState","window","localStorage","getItem","combineReducers","action","setItem","removeItem","newSummary","tileObj","overlapping","forEach","tile","ele","indexOf","splice","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85325068.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sunflower_PNG13389.1ec2243c.png\";","module.exports = __webpack_public_path__ + \"static/media/harvest_bkg.a09bed9f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/493312.86471353.jpg\";","module.exports = __webpack_public_path__ + \"static/media/black-soil-2.fcdd0d70.png\";","export const setCurrentUser = (data) => ({\r\n  type: \"SET-CURRENT-USER\",\r\n  userData: data,\r\n});\r\n\r\nexport const logOutCurrentUser = () => ({\r\n  type: \"LOG-OUT-CURRENT-USER\",\r\n});\r\n\r\nexport const requestAllPlants = () => ({\r\n  type: \"REQUEST-ALL-PLANTS\",\r\n});\r\n\r\nexport const receiveAllPlants = (data) => ({\r\n  type: \"RECEIVE-ALL-PLANTS\",\r\n  plants: data,\r\n});\r\n\r\nexport const createMyGarden = (tileObj) => ({\r\n  type: \"CREATE-MY-GARDEN\",\r\n  tileObj: tileObj,\r\n});\r\n\r\nexport const updateGardenTile = (plantObj, index, tilesArray) => ({\r\n  type: \"UPDATE-GARDEN-TILE\",\r\n  plantObj: plantObj,\r\n  index: index,\r\n  tilesArray: tilesArray,\r\n});\r\n\r\nexport const deleteGardenTiles = (index, tilesArray) => ({\r\n  type: \"DELETE-GARDEN-TILES\",\r\n  index: index,\r\n  tilesArray: tilesArray,\r\n});\r\n\r\nexport const togglePlantsMenuContent = () => ({\r\n  type: \"TOGGLE-PLANTS-MENU-CONTENT\",\r\n});\r\n\r\nexport const toggleSummaryMenuContent = () => ({\r\n  type: \"TOGGLE-SUMMARY-MENU-CONTENT\",\r\n});\r\n\r\nexport const toggleModalShowing = (content, contentType) => ({\r\n  type: \"TOGGLE-MODAL-SHOWING\",\r\n  content: content,\r\n  contentType: contentType,\r\n});\r\n\r\nexport const targetGardenTiles = (target) => ({\r\n  type: \"TARGET-GARDEN-TILES\",\r\n  target: target,\r\n});\r\n\r\nexport const setPlantOnDrag = (plantObj) => ({\r\n  type: \"SET-PLANT-ON-DRAG\",\r\n  plantObj: plantObj,\r\n});\r\n\r\nexport const addExtraContent = (contentDiv) => ({\r\n  type: \"ADD-EXTRA-CONTENT\",\r\n  contentDiv: contentDiv,\r\n});\r\n\r\nexport const setGardenStatus = (status) => ({\r\n  type: \"SET-GARDEN-STATUS\",\r\n  status: status,\r\n});\r\n\r\nexport const copyGardenFromDb = (garden) => ({\r\n  type: \"COPY-GARDEN-FROM-DB\",\r\n  garden: garden,\r\n});\r\n","export const GARDEN_TILE_SIZE = 20; // 1 tile represent 2inch\r\nexport const TILE_SIZE_REPRESENTATION = 2; // in inches\r\n\r\n// export const GARDEN_WRAPPER_WIDTH =\r\n//   (GARDEN_WIDTH / TILE_SIZE_REPRESENTATION) * GARDEN_TILE_SIZE; //in pixels\r\n\r\nexport const COLORS = {\r\n  light_mint: \"#F5FFFA\",\r\n  dark_teal: \"#2f4f4f\",\r\n  title_green: \"#228b22\",\r\n  tomato: \"#FF6347\",\r\n  lilac: \"#9370db\",\r\n};\r\n","import {\r\n  TILE_SIZE_REPRESENTATION,\r\n  GARDEN_HEIGHT,\r\n  GARDEN_WIDTH,\r\n} from \"./constants\";\r\n\r\nexport const getNumberFromString = (string) => {\r\n  let number = string.match(/(\\d+)/);\r\n  if (number) return number[0];\r\n  else return 10;\r\n};\r\n\r\nexport const getTilesSpace = (spacing) => {\r\n  return Math.round(spacing / TILE_SIZE_REPRESENTATION);\r\n};\r\n\r\nexport const getSpacingTilesArray = (\r\n  string,\r\n  plantCenterIndex,\r\n  GARDEN_WIDTH,\r\n  GARDEN_HEIGHT\r\n) => {\r\n  const array = [];\r\n  const spacingTiles = getTilesSpace(getNumberFromString(string));\r\n\r\n  let index =\r\n    plantCenterIndex -\r\n    (GARDEN_WIDTH / TILE_SIZE_REPRESENTATION) * spacingTiles -\r\n    spacingTiles;\r\n  for (let i = 0; i < spacingTiles * 2 + 1; i++) {\r\n    if (\r\n      index <\r\n      (GARDEN_HEIGHT / TILE_SIZE_REPRESENTATION) *\r\n        (GARDEN_WIDTH / TILE_SIZE_REPRESENTATION)\r\n    ) {\r\n      if (index >= 0) {\r\n        for (let j = 0; j < spacingTiles * 2 + 1; j++) {\r\n          array.push(index++);\r\n        }\r\n        index -= spacingTiles * 2 + 1;\r\n      }\r\n      index += GARDEN_WIDTH / TILE_SIZE_REPRESENTATION;\r\n    }\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const getPlantObjById = (id, array) => {\r\n  return array.find((plant) => plant.id === id);\r\n};\r\n\r\nexport const fetchGarden = async (email) => {\r\n  try {\r\n    const res = await fetch(`/users/garden/${email}`);\r\n    const account = await res.json();\r\n    return account;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { setCurrentUser, copyGardenFromDb } from \"../../actions\";\r\nimport { COLORS } from \"../../constants\";\r\nimport { fetchGarden } from \"../../utilities\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const [username, setUsername] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n  const { loggedIn } = useSelector((state) => state.userReducer);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const bod = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    const reqObj = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(bod),\r\n    };\r\n\r\n    try {\r\n      const res = await fetch(`/users/account/${email}`, reqObj);\r\n      const account = await res.json();\r\n      if (res.status === 201) {\r\n        const gardenData = await fetchGarden(email);\r\n        dispatch(setCurrentUser(account.data));\r\n        dispatch(copyGardenFromDb(gardenData.data.garden));\r\n      } else console.log(account.message);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {!loggedIn && (\r\n        <FormContainer>\r\n          <h1>My Garden</h1>\r\n\r\n          <form onSubmit={(e) => handleLogin(e)}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"USERNAME\"\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"EMAIL\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"PASSWORD\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button>LOGIN</button>\r\n          </form>\r\n          <Link to={\"/new-account\"}>\r\n            <h2>Don't have an account? Click here!</h2>\r\n          </Link>\r\n        </FormContainer>\r\n      )}\r\n      {loggedIn && <Redirect to=\"/account\" />}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  background-image: url(${require(\"../../assets/harvest_bkg.jpg\")});\r\n  background-size: cover;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  h1 {\r\n    color: ${COLORS.title_green};\r\n    margin: 0 20px 15px 0;\r\n    background-color: ${COLORS.light_mint};\r\n    width: 100%;\r\n    text-align: center;\r\n    height: 50px;\r\n    border-radius: 2px;\r\n    padding-top: 15px;\r\n  }\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  input {\r\n    border-radius: 4px;\r\n    outline: none;\r\n  }\r\n  button {\r\n    background-color: ${COLORS.title_green};\r\n    color: whitesmoke;\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    font-size: 0.7em;\r\n    border: none;\r\n    margin: 10px auto 0 auto;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      transform: scale(1.2);\r\n    }\r\n  }\r\n  h2 {\r\n    color: ${COLORS.light_mint};\r\n    font-size: 1.5em;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nimport Login from \"./Login\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst Homepage = () => {\r\n  const { loggedIn } = useSelector((state) => state.userReducer);\r\n  return (\r\n    <>\r\n      {loggedIn && <Redirect to=\"/account\" />}\r\n      {!loggedIn && <Login />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { COLORS, TILE_SIZE_REPRESENTATION } from \"../../constants\";\r\n\r\nconst SignUpPage = () => {\r\n  const [username, setUsername] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n  const [width, setWidth] = useState(null);\r\n  const [height, setHeight] = useState(null);\r\n\r\n  const [newUserFlag, setNewUserFlag] = useState(false);\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    let gardenArr = [];\r\n    const gardenArrLength =\r\n      ((width * 100) / 2.54 / TILE_SIZE_REPRESENTATION) *\r\n      ((height * 100) / 2.54 / TILE_SIZE_REPRESENTATION);\r\n    for (let i = 0; i < gardenArrLength; i++)\r\n      gardenArr.push({\r\n        _id: i,\r\n        planted: \"false\",\r\n        spacing: \"false\",\r\n      });\r\n    const bod = {\r\n      newUser: {\r\n        _id: email,\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n        gardenWidth: width,\r\n        gardenHeight: height,\r\n      },\r\n      newGarden: {\r\n        _id: email,\r\n        garden: gardenArr,\r\n      },\r\n    };\r\n\r\n    const reqObj = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(bod),\r\n    };\r\n\r\n    try {\r\n      const send = await fetch(\"users/new\", reqObj);\r\n      const res = await send.json();\r\n      if (res.status === 201) setNewUserFlag(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {newUserFlag && <Redirect to=\"/\" />}\r\n      <form onSubmit={(e) => handleSignUp(e)}>\r\n        <div>\r\n          <h1>My Garden</h1>\r\n\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"USERNAME\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"EMAIL\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"PASSWORD\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Link to={\"/\"}>\r\n            <h2>Already have an account? Log in!</h2>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"GARDEN LENGTH\"\r\n            onChange={(e) => setWidth(e.target.value)}\r\n          />\r\n          <label>METERS</label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"GARDEN WIDTH\"\r\n            onChange={(e) => setHeight(e.target.value)}\r\n          />\r\n          <label>METERS</label>\r\n          <button>SIGN UP</button>\r\n        </div>\r\n      </form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  background-image: url(${require(\"../../assets/493312.jpg\")});\r\n  background-size: cover;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  h1 {\r\n    color: ${COLORS.title_green};\r\n    padding-bottom: 15px;\r\n  }\r\n\r\n  h2 {\r\n    color: ${COLORS.dark_teal};\r\n    cursor: pointer;\r\n    margin-top: 10px;\r\n  }\r\n\r\n  form {\r\n    background-color: rgba(245, 245, 245, 0.7);\r\n    display: flex;\r\n    padding: 30px;\r\n    border-radius: 2px;\r\n    color: ${COLORS.dark_teal};\r\n\r\n    div {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    div:first-child {\r\n      padding-right: 20px;\r\n      border-right: 2px ${COLORS.tomato} solid;\r\n    }\r\n\r\n    div:last-child {\r\n      margin-left: 20px;\r\n    }\r\n\r\n    button {\r\n      background-color: ${COLORS.tomato};\r\n      color: whitesmoke;\r\n      width: 50px;\r\n      height: 50px;\r\n      border-radius: 50%;\r\n      border: none;\r\n      margin-left: 100px;\r\n\r\n      &:hover {\r\n        transform: scale(1.2);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SignUpPage;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Icon } from \"react-icons-kit\";\r\nimport { infoOutline } from \"react-icons-kit/typicons/infoOutline\";\r\n\r\nimport { COLORS } from \"../../constants\";\r\nimport { toggleModalShowing, setPlantOnDrag } from \"../../actions\";\r\n\r\nconst Plant = ({ name, image_url, spacing, id, description, draggable }) => {\r\n  const dispatch = useDispatch();\r\n  const plantObj = {\r\n    name: name,\r\n    img: `https://res-2.cloudinary.com/do6bw42am/image/upload/c_scale,f_auto,h_300/v1/${image_url}`,\r\n    spacing,\r\n    id,\r\n  };\r\n  const handleDragStart = (e) => {\r\n    console.log(\"plant drag.........\");\r\n    e.dataTransfer.setData(\"plantObj\", JSON.stringify(plantObj));\r\n    dispatch(setPlantOnDrag(plantObj));\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      src={`https://res-2.cloudinary.com/do6bw42am/image/upload/c_scale,f_auto,h_300/v1/${image_url}`}\r\n      draggable={draggable}\r\n      onDragStart={handleDragStart}\r\n      onDragOver={handleDragOver}\r\n    >\r\n      <p>\r\n        {name}\r\n        <StyledIcon\r\n          icon={infoOutline}\r\n          color={COLORS.light_mint}\r\n          size={10}\r\n          onClick={() =>\r\n            dispatch(toggleModalShowing(description, \"description:\"))\r\n          }\r\n        />\r\n      </p>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  width: 150px;\r\n  height: 50px;\r\n  background-image: url(${(props) => props.src});\r\n  background-position: center;\r\n  background-size: cover;\r\n  color: ${COLORS.light_mint};\r\n  text-align: center;\r\n  font-size: 0.8em;\r\n  overflow: hidden;\r\n  @media (max-width: 768px) {\r\n    height: 30px;\r\n  }\r\n\r\n  p {\r\n    background-color: ${COLORS.dark_teal};\r\n    padding: 5px 0;\r\n  }\r\n  &:hover p {\r\n    background-color: rgba(47, 79, 79, 0.5);\r\n    transform: scale(1.5);\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  padding-left: 20px;\r\n`;\r\n\r\nexport default Plant;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Icon } from \"react-icons-kit\";\r\nimport { deleteOutline } from \"react-icons-kit/typicons/deleteOutline\";\r\n\r\nimport { COLORS } from \"../../constants\";\r\nimport { toggleModalShowing } from \"../../actions\";\r\n\r\nconst Modal = () => {\r\n  const dispatch = useDispatch();\r\n  const { content, isShowing, contentType, extraContent } = useSelector(\r\n    (state) => state.modalReducer\r\n  );\r\n  return (\r\n    <>\r\n      {isShowing && (\r\n        <Wrapper>\r\n          <LeftDiv extraContent={extraContent}>\r\n            <Icon\r\n              icon={deleteOutline}\r\n              color={COLORS.light_mint}\r\n              onClick={() => dispatch(toggleModalShowing(\"\"))}\r\n            />\r\n            <h2>{contentType}</h2>\r\n            <div>{content}</div>\r\n          </LeftDiv>\r\n          {extraContent && <ContentDiv>{extraContent}</ContentDiv>}\r\n        </Wrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  width: 70%;\r\n  height: auto;\r\n  border: 1px solid ${COLORS.dark_teal};\r\n  border-radius: 8px;\r\n  background-color: rgba(245, 245, 245, 0.8);\r\n  position: fixed;\r\n  top: 50px;\r\n  left: 15%;\r\n  color: ${COLORS.dark_teal};\r\n  font-size: 1em;\r\n  padding: 10px 20px;\r\n  margin-top: 10px;\r\n  display: flex;\r\n\r\n  h2 {\r\n    color: ${COLORS.tomato};\r\n  }\r\n`;\r\n\r\nconst LeftDiv = styled.div`\r\n  width: ${(props) => (props.extraContent ? \"40%\" : \"100%\")};\r\n`;\r\n\r\nconst ContentDiv = styled.div`\r\n  background-color: #9370db;\r\n  color: whitesmoke;\r\n  border-radius: 8px;\r\n  margin-left: 20px;\r\n  padding: 10px;\r\n  max-width: 60%;\r\n`;\r\n\r\nexport default Modal;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n\r\nimport { requestAllPlants, receiveAllPlants } from \"../../actions\";\r\nimport Plant from \"./Plant\";\r\nimport Modal from \"../modal\";\r\n\r\nconst Nursery = () => {\r\n  const dispatch = useDispatch();\r\n  const { plants, status } = useSelector((state) => state.plantsReducer);\r\n\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 10,\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 7,\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 4,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 3,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(requestAllPlants());\r\n    fetch(\"/plants/all\")\r\n      .then((res) => res.json())\r\n      .then((res) => dispatch(receiveAllPlants(res.data)));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {/* {status === \"loading\" && <Loading />} */}\r\n      {status === \"ready\" && (\r\n        <Carousel responsive={responsive}>\r\n          {JSON.parse(plants).map((plant) => (\r\n            <Plant\r\n              name={plant.name}\r\n              image_url={plant.image_url}\r\n              key={`nursery-plant-${plant.name}`}\r\n              spacing={plant.spacing}\r\n              id={plant.id}\r\n              description={plant.description}\r\n              draggable=\"true\"\r\n            />\r\n          ))}\r\n        </Carousel>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 60px;\r\n  margin-left: 20px;\r\n  width: 100%;\r\n  height: auto;\r\n  position: fixed;\r\n  left: 0;\r\n`;\r\n\r\nexport default Nursery;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Icon } from \"react-icons-kit\";\r\nimport { weatherSunny } from \"react-icons-kit/typicons/weatherSunny\";\r\n\r\nimport { getPlantObjById } from \"../../utilities\";\r\nimport { COLORS } from \"../../constants\";\r\nimport { toggleModalShowing } from \"../../actions\";\r\n\r\nconst Summary = () => {\r\n  console.log(\"rodeo\");\r\n  const dispatch = useDispatch();\r\n  const { summary } = useSelector((state) => state.gardenReducer);\r\n  const { plants } = useSelector((state) => state.plantsReducer);\r\n  return (\r\n    <Wrapper>\r\n      {summary.map((each) => {\r\n        const plant = getPlantObjById(each.id, JSON.parse(plants));\r\n        return (\r\n          <SummaryDiv>\r\n            <p>\r\n              {plant.name}\r\n              <Icon\r\n                icon={weatherSunny}\r\n                size={20}\r\n                onClick={() =>\r\n                  dispatch(toggleModalShowing(plant.optimal_sun, \"sunshine:\"))\r\n                }\r\n              />\r\n            </p>\r\n            <Quantity>{\"X \" + each.quantity}</Quantity>\r\n          </SummaryDiv>\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst SummaryDiv = styled.div`\r\n  width: 200px;\r\n  display: flex;\r\n  position: relative;\r\n  margin: 10px 0;\r\n  p {\r\n    width: 100%;\r\n    background-color: ${COLORS.title_green};\r\n    color: whitesmoke;\r\n  }\r\n`;\r\n\r\nconst Quantity = styled.span`\r\n  background-color: ${COLORS.tomato};\r\n  color: whitesmoke;\r\n  width: 30px;\r\n  height: 30px;\r\n  position: absolute;\r\n  padding-top: 10px;\r\n  margin-left: 150px;\r\n  margin-top: -10px;\r\n`;\r\n\r\nexport default Summary;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Nursery from \"../nursery\";\r\nimport Summary from \"../summary\";\r\n\r\nconst MenuContent = () => {\r\n  const { plants, summary } = useSelector((state) => state.menuReducer);\r\n  return (\r\n    <Wrapper>\r\n      {plants && <Nursery />}\r\n      {summary && <Summary />}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div``;\r\n\r\nexport default MenuContent;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.button`\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n  border: none;\r\n  background: transparent;\r\n  cursor: pointer;\r\n  text-align: left;\r\n  font: inherit;\r\n  color: inherit;\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport UnstyledButton from \"../UnstyledButton\";\r\nimport { logOutCurrentUser } from \"../../actions\";\r\n\r\nconst LogOut = () => {\r\n  const dispatch = useDispatch();\r\n  const { garden } = useSelector((state) => state.gardenReducer);\r\n  const { userData } = useSelector((state) => state.userReducer);\r\n\r\n  const handleLogOut = async () => {\r\n    const bod = {\r\n      newGarden: garden,\r\n      email: userData.email,\r\n    };\r\n    const reqObj = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(bod),\r\n    };\r\n\r\n    try {\r\n      const send = await fetch(\"/user/update-garden\", reqObj);\r\n      const res = await send.json();\r\n      if (res.status === 201) console.log(\"success\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    await dispatch(logOutCurrentUser());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UnstyledButton onClick={() => handleLogOut()}>\r\n        LOG OUT\r\n        <img src={require(\"../../assets/sunflower_PNG13389.png\")} />\r\n      </UnstyledButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogOut;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport MenuContent from \"./MenuContent\";\r\nimport LogOut from \"./LogOut\";\r\nimport UnstyledButton from \"../UnstyledButton\";\r\nimport {\r\n  togglePlantsMenuContent,\r\n  toggleSummaryMenuContent,\r\n} from \"../../actions\";\r\nimport Modal from \"../modal\";\r\nimport { COLORS } from \"../../constants\";\r\n\r\nconst Header = () => {\r\n  const { userData } = useSelector((state) => state.userReducer);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Wrapper>\r\n      <NavBar>\r\n        <LogOut />\r\n        <UnstyledButton onClick={() => dispatch(togglePlantsMenuContent())}>\r\n          PLANT NURSERY\r\n          <img src={require(\"../../assets/sunflower_PNG13389.png\")} />\r\n        </UnstyledButton>\r\n        <UnstyledButton onClick={() => dispatch(toggleSummaryMenuContent())}>\r\n          MY GARDEN SUMMARY\r\n          <img src={require(\"../../assets/sunflower_PNG13389.png\")} />\r\n        </UnstyledButton>\r\n        <Greeting>\r\n          {`Howdy ${userData.username}!`}\r\n          <img src={require(\"../../assets/sunflower_PNG13389.png\")} />\r\n        </Greeting>\r\n      </NavBar>\r\n      <MenuContent />\r\n      <Modal />\r\n      <h1>My Garden</h1>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  h1 {\r\n    color: ${COLORS.title_green};\r\n    margin: 15px 0 15px 20px;\r\n  }\r\n`;\r\n\r\nconst NavBar = styled.div`\r\n  background-color: #f5f5f5;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: ${COLORS.dark_teal};\r\n  border-bottom: solid ${COLORS.title_green} 1px;\r\n  border-top: solid ${COLORS.title_green} 1px;\r\n  padding: 10px 100px 10px 20px;\r\n  margin-top: 10px;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n    font-size: 0.5em;\r\n  }\r\n  button {\r\n    padding-left: 20px;\r\n    outline: none;\r\n    &:hover img {\r\n      visibility: visible;\r\n    }\r\n    img {\r\n      height: 20px;\r\n      visibility: hidden;\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Greeting = styled.span`\r\n  color: ${COLORS.lilac};\r\n  text-align: right;\r\n  img {\r\n    height: 20px;\r\n    margin-left: 10px;\r\n    visibility: visible;\r\n    margin-right: 40px;\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Icon } from \"react-icons-kit\";\r\nimport { u1F33E } from \"react-icons-kit/noto_emoji_regular/u1F33E\";\r\nimport { squirrel } from \"react-icons-kit/oct/squirrel\";\r\nimport { u1F34E } from \"react-icons-kit/noto_emoji_regular/u1F34E\";\r\n\r\nimport { GARDEN_TILE_SIZE, COLORS } from \"../../constants\";\r\nimport {\r\n  updateGardenTile,\r\n  targetGardenTiles,\r\n  toggleModalShowing,\r\n  deleteGardenTiles,\r\n  addExtraContent,\r\n} from \"../../actions\";\r\nimport { getSpacingTilesArray, getPlantObjById } from \"../../utilities\";\r\nimport UnstyledButton from \"../UnstyledButton\";\r\n\r\nconst GardenTile = ({ index }) => {\r\n  const dispatch = useDispatch();\r\n  const { garden, status, target } = useSelector(\r\n    (state) => state.gardenReducer\r\n  );\r\n  const { plantTarget, plants } = useSelector((state) => state.plantsReducer);\r\n  const { GARDEN_WIDTH, GARDEN_HEIGHT } = useSelector(\r\n    (state) => state.userReducer\r\n  );\r\n  const handleDeletePlant = () => {\r\n    const tilesArray = getSpacingTilesArray(\r\n      plantTarget.spacing,\r\n      index,\r\n      GARDEN_WIDTH,\r\n      GARDEN_HEIGHT\r\n    );\r\n    dispatch(deleteGardenTiles(index, tilesArray));\r\n    dispatch(toggleModalShowing({}, \"\"));\r\n  };\r\n  const handleDrop = (e) => {\r\n    console.log(\"drop...............\");\r\n    if (garden[index].planted == \"false\" && garden[index].spacing == \"false\") {\r\n      e.preventDefault();\r\n\r\n      const plantObj = JSON.parse(e.dataTransfer.getData(\"plantObj\"));\r\n      const tilesArray = getSpacingTilesArray(\r\n        plantObj.spacing,\r\n        index,\r\n        GARDEN_WIDTH,\r\n        GARDEN_HEIGHT\r\n      );\r\n\r\n      dispatch(updateGardenTile(plantObj, index, tilesArray));\r\n    }\r\n    dispatch(targetGardenTiles([]));\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"dragover.................\");\r\n  };\r\n\r\n  const handleDragEnter = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    console.log(\"dragenter.................\");\r\n\r\n    const tilesArray = getSpacingTilesArray(\r\n      plantTarget.spacing,\r\n      index,\r\n      GARDEN_WIDTH,\r\n      GARDEN_HEIGHT\r\n    );\r\n    dispatch(targetGardenTiles(tilesArray));\r\n  };\r\n\r\n  const handleDragLeave = (e) => {};\r\n  return (\r\n    <>\r\n      {garden[index] && (\r\n        <StyledCol\r\n          onDrop={(e) => handleDrop(e)}\r\n          onDragOver={(e) =>\r\n            garden[index].planted == \"false\" && garden[index].spacing == \"false\"\r\n              ? handleDragOver(e)\r\n              : null\r\n          }\r\n          // onDragEnter={(e) => handleDragEnter(e)}\r\n          // onDragLeave={handleDragLeave}\r\n          planted={garden[index].planted == \"true\" ? \"true\" : \"false\"}\r\n          spacing={garden[index].spacing == \"true\" ? \"true\" : \"false\"}\r\n          target={target.includes(index) ? \"true\" : \"false\"}\r\n          image={garden[index].plant ? `url(${garden[index].plant.img})` : null}\r\n          onClick={() => {\r\n            if (garden[index].planted) {\r\n              dispatch(\r\n                toggleModalShowing(\r\n                  <ModalWrapper>\r\n                    <BtnDiv>\r\n                      <UnstyledButton onClick={() => handleDeletePlant()}>\r\n                        <Icon icon={squirrel} /> delete this plant.\r\n                      </UnstyledButton>\r\n                      <UnstyledButton\r\n                        onClick={() =>\r\n                          dispatch(\r\n                            addExtraContent(\r\n                              getPlantObjById(\r\n                                garden[index].plant.id,\r\n                                JSON.parse(plants)\r\n                              ).when_to_plant\r\n                            )\r\n                          )\r\n                        }\r\n                      >\r\n                        <Icon icon={u1F33E} /> WHEN TO PLANT.\r\n                      </UnstyledButton>\r\n                      <UnstyledButton\r\n                        onClick={() =>\r\n                          dispatch(\r\n                            addExtraContent(\r\n                              getPlantObjById(\r\n                                garden[index].plant.id,\r\n                                JSON.parse(plants)\r\n                              ).harvesting\r\n                            )\r\n                          )\r\n                        }\r\n                      >\r\n                        <Icon icon={u1F34E} /> WHEN TO HARVEST.\r\n                      </UnstyledButton>\r\n                    </BtnDiv>\r\n                  </ModalWrapper>,\r\n                  garden[index].plant.name\r\n                )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          {garden[index].spacing == \"true\" && <Icon icon={u1F33E} size={20} />}\r\n        </StyledCol>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst StyledCol = styled.div`\r\n  border: ${(props) =>\r\n    props.spacing || props.planted\r\n      ? \"0.5px solid #8B4513\"\r\n      : \"0.5px #8B4513 dashed\"};\r\n  width: ${GARDEN_TILE_SIZE}px;\r\n  height: ${GARDEN_TILE_SIZE}px;\r\n  overflow: hidden;\r\n  background-color: ${(props) =>\r\n    (props.target === \"true\" && COLORS.title_green) ||\r\n    (props.spacing == \"true\" && COLORS.tomato) ||\r\n    \"none\"};\r\n  background-image: ${(props) =>\r\n    props.planted === \"true\" ? props.image : \"none\"};\r\n  border-radius: ${(props) => (props.planted === \"true\" ? \"4px\" : \"0px\")};\r\n  background-size: cover;\r\n  transform: ${(props) => (props.planted === \"true\" ? \"scale(3)\" : \"none\")};\r\n  color: whitesmoke;\r\n  opacity: ${(props) => (props.target === \"true\" ? \"0.5\" : \"1\")};\r\n`;\r\n\r\nconst ModalWrapper = styled.div``;\r\n\r\nconst BtnDiv = styled.div`\r\n  border-right: 2px solid ${COLORS.title_green};\r\n`;\r\n\r\nexport default GardenTile;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  GARDEN_TILE_SIZE,\r\n  COLORS,\r\n  TILE_SIZE_REPRESENTATION,\r\n} from \"../../constants\";\r\nimport {\r\n  createMyGarden,\r\n  setGardenStatus,\r\n  copyGardenFromDb,\r\n} from \"../../actions\";\r\nimport GardenTile from \"./GardenTile\";\r\n\r\nlet col = [];\r\nlet row = [];\r\nlet uniqueKey = 0;\r\n\r\nconst Garden = () => {\r\n  const dispatch = useDispatch();\r\n  const { status } = useSelector((state) => state.gardenReducer);\r\n  const { GARDEN_HEIGHT, GARDEN_WIDTH } = useSelector(\r\n    (state) => state.userReducer\r\n  );\r\n\r\n  useEffect(() => {\r\n    const col_tiles = GARDEN_WIDTH / TILE_SIZE_REPRESENTATION;\r\n    const row_tiles = GARDEN_HEIGHT / TILE_SIZE_REPRESENTATION;\r\n\r\n    for (let i = 0; i < col_tiles; i++) col.push(i);\r\n    for (let i = 0; i < row_tiles; i++) row.push(i);\r\n  }, []);\r\n\r\n  let tileIndex = -1;\r\n  return (\r\n    <Wrapper>\r\n      {status === \"ready\" && (\r\n        <GardenContainer>\r\n          {row.map((r) => {\r\n            return (\r\n              <StyledRow\r\n                key={`garden-row-${uniqueKey++}`}\r\n                width={\r\n                  (GARDEN_WIDTH / TILE_SIZE_REPRESENTATION) * GARDEN_TILE_SIZE\r\n                }\r\n              >\r\n                {col.map((c) => {\r\n                  tileIndex++;\r\n                  return (\r\n                    <GardenTile\r\n                      key={`garden-tile-${r}-${c}-${uniqueKey++}`}\r\n                      tileId={`${r}-${c}`}\r\n                      index={tileIndex}\r\n                    />\r\n                  );\r\n                })}\r\n              </StyledRow>\r\n            );\r\n          })}\r\n        </GardenContainer>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  overflow: scroll;\r\n  margin-top: 20%;\r\n  background-image: url(${require(\"../../assets/black-soil-2.png\")});\r\n  background-size: cover;\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n`;\r\n\r\nconst StyledRow = styled.div`\r\n  width: ${(props) => props.width}px;\r\n  display: flex;\r\n`;\r\n\r\nconst GardenContainer = styled.div``;\r\nexport default Garden;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport Header from \"../header\";\r\nimport Garden from \"../garden\";\r\n\r\nconst Account = () => {\r\n  const { userData, loggedIn } = useSelector((state) => state.userReducer);\r\n  console.log(userData);\r\n  console.log(loggedIn);\r\n  return (\r\n    <>\r\n      {loggedIn && (\r\n        <>\r\n          <Header />\r\n          <Garden />\r\n        </>\r\n      )}\r\n      {!loggedIn && <Redirect to=\"/\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { COLORS } from \"./constants\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n\r\n/* --------------- CSS RESET --------------- */\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\na{\r\n\tcolor: black;\r\n\ttext-decoration: none;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n/* ------------ END OF CSS RESET ------------ */\r\n\r\nhtml {\r\n  scroll-behavior: smooth;\r\n}\r\n\r\nbody {\r\n\tfont-family: 'Cuprum', sans-serif;\r\n\tbackground-color: ${COLORS.light_mint};\r\n\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n  background: #f1f1f1; \r\n}\r\n \r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: #888; \r\n}\r\n\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #555; \r\n}\r\n\r\n}\r\n\r\nh1 {\r\n\tfont-family: 'Lobster Two', cursive;\r\n\tfont-size: 2em;\r\n}\r\n\r\nh2 {\r\n\tfont-family: 'Lobster Two', cursive;\r\n}\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Homepage from \"./components/homepage\";\nimport SignUpPage from \"./components/sign-up-page\";\nimport Account from \"./components/account\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n          <Route path=\"/new-account\">\n            <SignUpPage />\n          </Route>\n          <Route path=\"/account\">\n            <Account />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { TILE_SIZE_REPRESENTATION } from \"../constants\";\r\n\r\nconst initialState = {\r\n  userData: JSON.parse(window.localStorage.getItem(\"user\")) || null,\r\n  loggedIn: window.localStorage.getItem(\"user\") ? true : false,\r\n  GARDEN_WIDTH: null,\r\n  GARDEN_HEIGHT: null,\r\n};\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SET-CURRENT-USER\":\r\n      window.localStorage.setItem(\"user\", JSON.stringify(action.userData));\r\n      let width = Math.round((action.userData.gardenWidth * 100) / 2.54);\r\n      let height = Math.round((action.userData.gardenHeight * 100) / 2.54);\r\n      if (width % TILE_SIZE_REPRESENTATION !== 0) width++;\r\n      if (height % TILE_SIZE_REPRESENTATION !== 0) height++;\r\n      return {\r\n        ...state,\r\n        userData: action.userData,\r\n        loggedIn: true,\r\n        GARDEN_WIDTH: width,\r\n        GARDEN_HEIGHT: height,\r\n      };\r\n    case \"LOG-OUT-CURRENT-USER\":\r\n      localStorage.removeItem(\"user\");\r\n      return {\r\n        ...state,\r\n        userData: null,\r\n        loggedIn: false,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","const initialState = {\r\n  status: \"idle\",\r\n  plants: {},\r\n  plantTarget: {},\r\n};\r\n\r\nexport default function plantsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"REQUEST-ALL-PLANTS\":\r\n      return {\r\n        ...state,\r\n        status: \"loading\",\r\n      };\r\n    case \"RECEIVE-ALL-PLANTS\":\r\n      return {\r\n        ...state,\r\n        status: \"ready\",\r\n        plants: action.plants,\r\n      };\r\n    case \"SET-PLANT-ON-DRAG\":\r\n      console.log(action.plantObj);\r\n      return {\r\n        ...state,\r\n        plantTarget: action.plantObj,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","const initialState = {\r\n  status: \"idle\",\r\n  garden: [],\r\n  summary: [],\r\n  target: [],\r\n};\r\n\r\nexport default function gardenReducer(state = initialState, action) {\r\n  let newGarden = [...state.garden];\r\n  let newSummary = [...state.summary];\r\n  let i = 0;\r\n\r\n  switch (action.type) {\r\n    case \"CREATE-MY-GARDEN\":\r\n      console.log(\"create\", i);\r\n      return {\r\n        ...state,\r\n        garden: [...state.garden, action.tileObj],\r\n      };\r\n    case \"SET-GARDEN-STATUS\":\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    case \"COPY-GARDEN-FROM-DB\":\r\n      console.log(action.garden);\r\n      return {\r\n        ...state,\r\n        garden: action.garden,\r\n        status: \"ready\",\r\n      };\r\n    case \"UPDATE-GARDEN-TILE\":\r\n      let overlapping = false;\r\n\r\n      action.tilesArray.forEach((tile) => {\r\n        if (newGarden[tile].planted == \"true\") {\r\n          overlapping = true;\r\n          return;\r\n        }\r\n        if (!overlapping) {\r\n          if (tile !== action.index) {\r\n            newGarden[tile] = {\r\n              ...newGarden[tile],\r\n              spacing: \"true\",\r\n              plant: action.plantObj,\r\n            };\r\n          } else {\r\n            if (!newSummary.find((ele) => ele.id === action.plantObj.id)) {\r\n              newSummary.push({\r\n                id: action.plantObj.id,\r\n                quantity: 1,\r\n              });\r\n            } else {\r\n              newSummary = newSummary.map((ele) =>\r\n                ele.id === action.plantObj.id\r\n                  ? { ...ele, quantity: ele.quantity + 1 }\r\n                  : ele\r\n              );\r\n            }\r\n            newGarden[action.index] = {\r\n              ...newGarden[action.index],\r\n              planted: \"true\",\r\n              plant: action.plantObj,\r\n            };\r\n          }\r\n        }\r\n      });\r\n      if (!overlapping) {\r\n        return {\r\n          ...state,\r\n          garden: newGarden,\r\n          summary: newSummary,\r\n        };\r\n      } else return { ...state };\r\n    case \"DELETE-GARDEN-TILES\":\r\n      action.tilesArray.forEach((tile) => {\r\n        if (tile === action.index) {\r\n          newSummary.forEach((plant) => {\r\n            if (state.garden[tile].plant.id === plant.id) {\r\n              if (plant.quantity > 1) {\r\n                newSummary[newSummary.indexOf(plant)] = {\r\n                  ...plant,\r\n                  quantity: plant.quantity - 1,\r\n                };\r\n              } else {\r\n                newSummary.splice(newSummary.indexOf(plant), 1);\r\n              }\r\n            }\r\n          });\r\n        }\r\n        newGarden[tile] = {\r\n          _id: state.garden[tile]._id,\r\n          spacing: false,\r\n          planted: false,\r\n        };\r\n      });\r\n      return {\r\n        ...state,\r\n        garden: newGarden,\r\n        summary: newSummary,\r\n      };\r\n    case \"TARGET-GARDEN-TILES\":\r\n      return {\r\n        ...state,\r\n        target: action.target,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","const initialState = {\r\n  plants: false,\r\n  summary: false,\r\n};\r\n\r\nexport default function menuReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"TOGGLE-PLANTS-MENU-CONTENT\":\r\n      return {\r\n        ...state,\r\n        plants: !state.plants,\r\n        summary: false,\r\n      };\r\n    case \"TOGGLE-SUMMARY-MENU-CONTENT\":\r\n      return {\r\n        ...state,\r\n        plants: false,\r\n        summary: !state.summary,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","const initialState = {\r\n  isShowing: false,\r\n  content: {},\r\n  contentType: null,\r\n  extraContent: null,\r\n};\r\n\r\nexport default function modalReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"TOGGLE-MODAL-SHOWING\":\r\n      return {\r\n        ...state,\r\n        isShowing: !state.isShowing,\r\n        content: action.content,\r\n        contentType: action.contentType,\r\n        extraContent: null,\r\n      };\r\n    case \"ADD-EXTRA-CONTENT\":\r\n      return {\r\n        ...state,\r\n        extraContent: action.contentDiv,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport userReducer from \"./user-reducer\";\r\nimport plantsReducer from \"./plants-reducer\";\r\nimport gardenReducer from \"./garden-reducer\";\r\nimport menuReducer from \"./menu-reducer\";\r\nimport modalReducer from \"./modal-reducer\";\r\n\r\nexport default combineReducers({\r\n  userReducer,\r\n  plantsReducer,\r\n  gardenReducer,\r\n  menuReducer,\r\n  modalReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\n\nimport configureStore from \"./store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore } from \"redux\";\r\n\r\nimport reducer from \"./reducers\";\r\n\r\nexport default function configureStore(initialState) {\r\n  const store = createStore(\r\n    reducer,\r\n    initialState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  );\r\n\r\n  return store;\r\n}\r\n"],"sourceRoot":""}